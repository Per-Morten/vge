#include <vge_gfx_gl.h>
#include <cstdio>

const char*
vge::gfx::gl_enum_to_string(GLenum e)
{
    #define TO_STRING_GENERATOR(x) case x: return #x; break;

    switch (e)
    {
        // shader:
        TO_STRING_GENERATOR(GL_VERTEX_SHADER);
        TO_STRING_GENERATOR(GL_GEOMETRY_SHADER);
        TO_STRING_GENERATOR(GL_FRAGMENT_SHADER);

        // buffer usage:
        TO_STRING_GENERATOR(GL_STREAM_DRAW);
        TO_STRING_GENERATOR(GL_STREAM_READ);
        TO_STRING_GENERATOR(GL_STREAM_COPY);
        TO_STRING_GENERATOR(GL_STATIC_DRAW);
        TO_STRING_GENERATOR(GL_STATIC_READ);
        TO_STRING_GENERATOR(GL_STATIC_COPY);
        TO_STRING_GENERATOR(GL_DYNAMIC_DRAW);
        TO_STRING_GENERATOR(GL_DYNAMIC_READ);
        TO_STRING_GENERATOR(GL_DYNAMIC_COPY);

        // errors:
        TO_STRING_GENERATOR(GL_NO_ERROR);
        TO_STRING_GENERATOR(GL_INVALID_ENUM);
        TO_STRING_GENERATOR(GL_INVALID_VALUE);
        TO_STRING_GENERATOR(GL_INVALID_OPERATION);
        TO_STRING_GENERATOR(GL_INVALID_FRAMEBUFFER_OPERATION);
        TO_STRING_GENERATOR(GL_OUT_OF_MEMORY);
        TO_STRING_GENERATOR(GL_STACK_UNDERFLOW);
        TO_STRING_GENERATOR(GL_STACK_OVERFLOW);

        // types:
        TO_STRING_GENERATOR(GL_BYTE);
        TO_STRING_GENERATOR(GL_UNSIGNED_BYTE);
        TO_STRING_GENERATOR(GL_SHORT);
        TO_STRING_GENERATOR(GL_UNSIGNED_SHORT);
        TO_STRING_GENERATOR(GL_FLOAT);
        TO_STRING_GENERATOR(GL_FLOAT_VEC2);
        TO_STRING_GENERATOR(GL_FLOAT_VEC3);
        TO_STRING_GENERATOR(GL_FLOAT_VEC4);
        TO_STRING_GENERATOR(GL_DOUBLE);
        TO_STRING_GENERATOR(GL_DOUBLE_VEC2);
        TO_STRING_GENERATOR(GL_DOUBLE_VEC3);
        TO_STRING_GENERATOR(GL_DOUBLE_VEC4);
        TO_STRING_GENERATOR(GL_INT);
        TO_STRING_GENERATOR(GL_INT_VEC2);
        TO_STRING_GENERATOR(GL_INT_VEC3);
        TO_STRING_GENERATOR(GL_INT_VEC4);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_VEC2);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_VEC3);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_VEC4);
        TO_STRING_GENERATOR(GL_BOOL);
        TO_STRING_GENERATOR(GL_BOOL_VEC2);
        TO_STRING_GENERATOR(GL_BOOL_VEC3);
        TO_STRING_GENERATOR(GL_BOOL_VEC4);
        TO_STRING_GENERATOR(GL_FLOAT_MAT2);
        TO_STRING_GENERATOR(GL_FLOAT_MAT3);
        TO_STRING_GENERATOR(GL_FLOAT_MAT4);
        TO_STRING_GENERATOR(GL_FLOAT_MAT2x3);
        TO_STRING_GENERATOR(GL_FLOAT_MAT2x4);
        TO_STRING_GENERATOR(GL_FLOAT_MAT3x2);
        TO_STRING_GENERATOR(GL_FLOAT_MAT3x4);
        TO_STRING_GENERATOR(GL_FLOAT_MAT4x2);
        TO_STRING_GENERATOR(GL_FLOAT_MAT4x3);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT2);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT3);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT4);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT2x3);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT2x4);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT3x2);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT3x4);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT4x2);
        TO_STRING_GENERATOR(GL_DOUBLE_MAT4x3);
        TO_STRING_GENERATOR(GL_SAMPLER_1D);
        TO_STRING_GENERATOR(GL_SAMPLER_2D);
        TO_STRING_GENERATOR(GL_SAMPLER_3D);
        TO_STRING_GENERATOR(GL_SAMPLER_CUBE);
        TO_STRING_GENERATOR(GL_SAMPLER_1D_SHADOW);
        TO_STRING_GENERATOR(GL_SAMPLER_2D_SHADOW);
        TO_STRING_GENERATOR(GL_SAMPLER_1D_ARRAY);
        TO_STRING_GENERATOR(GL_SAMPLER_2D_ARRAY);
        TO_STRING_GENERATOR(GL_SAMPLER_1D_ARRAY_SHADOW);
        TO_STRING_GENERATOR(GL_SAMPLER_2D_ARRAY_SHADOW);
        TO_STRING_GENERATOR(GL_SAMPLER_2D_MULTISAMPLE);
        TO_STRING_GENERATOR(GL_SAMPLER_2D_MULTISAMPLE_ARRAY);
        TO_STRING_GENERATOR(GL_SAMPLER_CUBE_SHADOW);
        TO_STRING_GENERATOR(GL_SAMPLER_BUFFER);
        TO_STRING_GENERATOR(GL_SAMPLER_2D_RECT);
        TO_STRING_GENERATOR(GL_SAMPLER_2D_RECT_SHADOW);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_1D);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_2D);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_3D);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_CUBE);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_1D_ARRAY);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_2D_ARRAY);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_2D_MULTISAMPLE);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_BUFFER);
        TO_STRING_GENERATOR(GL_INT_SAMPLER_2D_RECT);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_1D);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_2D);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_3D);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_CUBE);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_1D_ARRAY);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_2D_ARRAY);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_BUFFER);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_SAMPLER_2D_RECT);
        TO_STRING_GENERATOR(GL_IMAGE_1D);
        TO_STRING_GENERATOR(GL_IMAGE_2D);
        TO_STRING_GENERATOR(GL_IMAGE_3D);
        TO_STRING_GENERATOR(GL_IMAGE_2D_RECT);
        TO_STRING_GENERATOR(GL_IMAGE_CUBE);
        TO_STRING_GENERATOR(GL_IMAGE_BUFFER);
        TO_STRING_GENERATOR(GL_IMAGE_1D_ARRAY);
        TO_STRING_GENERATOR(GL_IMAGE_2D_ARRAY);
        TO_STRING_GENERATOR(GL_IMAGE_2D_MULTISAMPLE);
        TO_STRING_GENERATOR(GL_IMAGE_2D_MULTISAMPLE_ARRAY);
        TO_STRING_GENERATOR(GL_INT_IMAGE_1D);
        TO_STRING_GENERATOR(GL_INT_IMAGE_2D);
        TO_STRING_GENERATOR(GL_INT_IMAGE_3D);
        TO_STRING_GENERATOR(GL_INT_IMAGE_2D_RECT);
        TO_STRING_GENERATOR(GL_INT_IMAGE_CUBE);
        TO_STRING_GENERATOR(GL_INT_IMAGE_BUFFER);
        TO_STRING_GENERATOR(GL_INT_IMAGE_1D_ARRAY);
        TO_STRING_GENERATOR(GL_INT_IMAGE_2D_ARRAY);
        TO_STRING_GENERATOR(GL_INT_IMAGE_2D_MULTISAMPLE);
        TO_STRING_GENERATOR(GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_1D);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_2D);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_3D);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_2D_RECT);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_CUBE);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_BUFFER);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_1D_ARRAY);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_2D_ARRAY);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY);
        TO_STRING_GENERATOR(GL_UNSIGNED_INT_ATOMIC_COUNTER);

        // Debug stuff
        TO_STRING_GENERATOR(GL_DEBUG_SOURCE_API);
        TO_STRING_GENERATOR(GL_DEBUG_SOURCE_WINDOW_SYSTEM);
        TO_STRING_GENERATOR(GL_DEBUG_SOURCE_SHADER_COMPILER);
        TO_STRING_GENERATOR(GL_DEBUG_SOURCE_THIRD_PARTY);
        TO_STRING_GENERATOR(GL_DEBUG_SOURCE_APPLICATION);
        TO_STRING_GENERATOR(GL_DEBUG_SOURCE_OTHER);

        TO_STRING_GENERATOR(GL_DEBUG_TYPE_ERROR);
        TO_STRING_GENERATOR(GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR);
        TO_STRING_GENERATOR(GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR);
        TO_STRING_GENERATOR(GL_DEBUG_TYPE_PORTABILITY);
        TO_STRING_GENERATOR(GL_DEBUG_TYPE_PERFORMANCE);
        TO_STRING_GENERATOR(GL_DEBUG_TYPE_MARKER);
        TO_STRING_GENERATOR(GL_DEBUG_TYPE_PUSH_GROUP);
        TO_STRING_GENERATOR(GL_DEBUG_TYPE_POP_GROUP);
        TO_STRING_GENERATOR(GL_DEBUG_TYPE_OTHER);

        TO_STRING_GENERATOR(GL_DEBUG_SEVERITY_HIGH);
        TO_STRING_GENERATOR(GL_DEBUG_SEVERITY_MEDIUM);
        TO_STRING_GENERATOR(GL_DEBUG_SEVERITY_LOW);
        TO_STRING_GENERATOR(GL_DEBUG_SEVERITY_NOTIFICATION);
    }

    static char buffer[32];
    std::sprintf(buffer, "Unknown GLenum: (0x%04x)", e);
    return buffer;


    #undef TO_STRING_GENERATOR
}
